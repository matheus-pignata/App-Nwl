const { select, input, checkbox } = require('@inquirer/prompts')

let mensagem = "Bem vindo ao app de Metas";

let meta = {
    value: 'Tomar 3L de água por dia',
    checked: false,
}

let metas = [meta]

const cadastrarMeta = async () => {
    const meta = await input ({ message: "Digite a meta:"})

    if(meta.length == 0) {
        mensagem = "A meta não pode ser vazia."
        return //cadastrarMeta() se fizer assim fica no lupim
    }

    metas.push(
        { value: meta, checked: false}
    )
}

const listarMetas = async () => {
    const respostas = await checkbox ({
        message: "Use as setas para mudar de meta, o espaço para marcar ou desmarcar e o Entre para finalizar essa etapa",
        choices: [...metas],
        instructions: false,
    })

    metas.forEach((m) => {
        m.checked = false
    })
    
    if(respostas.length == 0) {
        mensagem = "Nenhuma meta selecionada"
        return
    }

    respostas.forEach((resposta) => {
        const meta = metas.find((m) => {
            return m.value == resposta
        })

        meta.checked = true
    })

    mensagem = "Meta(s) marcadas como consluída(s)"
}


const metasRealizadas = async () => {
    const realizadas = metas.filter((metas) => {
        return meta.checked
    })

    if(realizadas.length == 0) {
         mensagem = 'nao existem metas realizadas! :('
         return
    }

         await select({
            message: "Metas Realizadas " + realizadas.length,
            choices: [...realizadas]
       })
}

const metasAbertas = async () => {
    const abertas = metas.filter((meta) => {
        return meta.checked != true
    })

    if(abertas.length == 0){
        mensagem = "não existem metas abertas! :)"
        return
    }

    await select ({
        message: "Metas Abertas " + abertas.length,
        choices: [...abertas]
    })
}

const deletarMetas = async () => {
    const metasDesmarcadas = metas.map((meta) => {
        return { value: meta.value, checked: false }
    })
    
    
    
    const itensADeletar = await checkbox({
        message: "selecione iten para deletar",
        choices: [...metasDesmarcadas],
        instructions: false,
    })

    if(itensADeletar.length == 0) {
        mensagem = "Nenhum item para deletar!"
    return
}
   
  
  itensADeletar.forEach((item) => {
    metas = metas.filter((meta) => {
        return meta.value != item
    })
})
    

    mensagem = "meta(s) deleta(s) com sucesso!"
}

const mostrarMensagem = () => {
    console.clear();

    if(mensagem != "") {
        console.log(mensagem)
        console.log("")
        mensagem = ""
    }
}

const start = async () => {

    while(true) {
        mostrarMensagem()

       const opcao = await select({
            message: "Menu >",
            choices: [ 
                {
                    name: "Cadastrar meta",
                    value: "cadastrar"
                },
                {
                    name: "Listar metas",
                    value: "listar"
                },
                {
                    name: "Metas realizadas",
                    value: "realizadas"
                },
                {
                    name: "Metas Abertas",
                    value: "abertas"
                },
                {
                    name: "Deletar Metas",
                    value: "Deletar"
                },
                {
                    name: "Sair",
                    value: "sair"
                }
            ]
       })

       switch(opcao){
        case "cadastrar":
            await cadastrarMeta()
            break
        case "listar":
            await listarMetas()
            break
        case "realizadas":
            await metasRealizadas()
            break
        case "abertas":
            await metasAbertas()
            break
        case "Deletar":
            await deletarMetas()
            break
        case "sair":
            console.log("Até a próxima")
            return 
       }
    }

}

start ()